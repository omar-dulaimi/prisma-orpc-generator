// Basic example using prisma-orpc-generator

generator client {
  provider = "prisma-client-js"
}

generator orpc {
  provider = "../../lib/bin.js"
  output   = "./src/generated/orpc"
  
  // ===== BASIC CONFIGURATION =====
  contextPath = ""
  
  // ===== SCHEMA VALIDATION =====
  schemaLibrary = "zod"
  generateInputValidation = "true"
  generateOutputValidation = "true"
  
  // ===== HTTP & DOCUMENTATION =====
  serverPort = "3001"
  apiPrefix = "api"
  apiTitle = "Blog API"
  apiDescription = "A simple blog API with users and posts"
  apiVersion = "1.0.0"
  
  // ===== MODEL OPERATIONS =====
  generateModelActions = "create,createMany,findFirst,findFirstOrThrow,findMany,findUnique,findUniqueOrThrow,update,updateMany,upsert,delete,deleteMany,aggregate,groupBy,count,findRaw,aggregateRaw"
  showModelNameInProcedure = "true"
  enableSoftDeletes = "true"
  generateRelationResolvers = "true"
  
  // ===== DEVELOPER EXPERIENCE =====
  generateDocumentation = "true"
  generateTests = "true"
  enableDebugLogging = "false"
  
  // ===== CODE GENERATION =====
  useBarrelExports = "true"
  codeStyle = "prettier"
  
  // ===== PERFORMANCE =====
  
  // ===== RESPONSE SHAPING =====
  wrapResponses = "true"

  // ===== SHIELD / AUTHORIZATION =====
  generateShield = "true"
  shieldPath = "src/custom-shield"
  // When shieldPath is provided, auto-generation is skipped
  // defaultReadRule = "allow"
  // defaultWriteRule = "auth"
  // denyErrorCode = "FORBIDDEN"
  // debug = "false"
  // allowExternalErrors = "false"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AccommodationPricing {
  id        String   @id @default(cuid())
  price     Float
  currency  String
  createdAt DateTime @default(now())
}
